// components/NannyProfile/Step6.jsx
import React, { useState } from "react";
import "../../styles/register.css";
import "../../styles/profileStep.css";
import cameraIcon from "../../assets/camera.svg";

const Step6 = ({ onNext, onBack, onSelect }) => {
  const [noEducation, setNoEducation] = useState(false);
  const [educations, setEducations] = useState([]);
  const MAX_EDUCATIONS = 5;

  const handleToggleNoEducation = () => {
    setNoEducation((prev) => !prev);
    setEducations([]);
  };

  const handleInputChange = (index, e) => {
    const { name, value, files } = e.target;
    const updated = [...educations];
    updated[index][name] = files ? files[0] : value;
    setEducations(updated);
  };

  const addEducation = () => {
    if (educations.length >= MAX_EDUCATIONS) {
      alert(`–ú–∞–∫—Å–∏–º—É–º ${MAX_EDUCATIONS} –∑–∞–ø–∏—Å—ñ–≤ –æ—Å–≤—ñ—Ç–∏.`);
      return;
    }

    setNoEducation(false); // —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏—Ä—ñ—à–∏–≤ –¥–æ–¥–∞—Ç–∏ ‚Äî –∑–Ω—ñ–º–∞—î–º–æ "–Ω–µ–º–∞—î –æ—Å–≤—ñ—Ç–∏"

    setEducations((prev) => [
      ...prev,
      {
        institution: "",
        specialty: "",
        startYear: "",
        endYear: "",
        diploma_image: null,
      },
    ]);
  };

  const deleteEducation = (index) => {
    const updated = [...educations];
    updated.splice(index, 1);
    setEducations(updated);
  };

  const handleNextClick = () => {
    if (!noEducation && educations.some(e => !e.institution || !e.specialty || !e.startYear || !e.endYear)) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å '–Ω–µ–º–∞—î –æ—Å–≤—ñ—Ç–∏'.");
      return;
    }

    const result = noEducation ? ["–ù–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—å–Ω–æ—ó –æ—Å–≤—ñ—Ç–∏"] : educations;
    onSelect(result);
    onNext();
  };

  return (
    <div className="specialization-container">
      <button onClick={onBack} className="back-button">
        <span className="back-text">–ù–ê–ó–ê–î</span>
        <span className="back-arrow"></span>
      </button>

      <h1 className="title-light-full-page">–í–∫–∞–∂—ñ—Ç—å –≤–∞—à—É –æ—Å–≤—ñ—Ç—É</h1>
      <p className="description-light">
        –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤. –¶—ñ –¥–∞–Ω—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –±–∞—Ç—å–∫–∞–º <br />
        –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ –í–∞—Å.
      </p>
      <div className="specialization-label-row">
          <p className="left-text">–í–∞—à–∞ –æ—Å–≤—ñ—Ç–∞...</p>
          <p className="right-text">–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–µ –ø–æ–ª–µ</p>
        </div>
        
      <div className="specialization-selection">
        

        <div className="options-col">
          <button
            type="button"
            className={`option-pill ${noEducation ? "selected" : ""}`}
            onClick={handleToggleNoEducation}
          >
            –ù–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—å–Ω–æ—ó –æ—Å–≤—ñ—Ç–∏
          </button>          

        {!noEducation && educations.map((edu, index) => (
          <div key={index} className="education-block">
            <div className="education-header">
              <strong>–û—Å–≤—ñ—Ç–∞ {index + 1}</strong>
              <button
                className="remove-education-btn"
                onClick={() => deleteEducation(index)}
              >
                ‚úñ
              </button>
            </div>

            <input
              className="education-input"
              type="text"
              name="institution"
              placeholder="–ù–∞–∑–≤–∞ –Ω–∞–≤—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É..."
              value={edu.institution}
              onChange={(e) => handleInputChange(index, e)}
            />
            <input
              className="education-input"
              type="text"
              name="specialty"
              placeholder="–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è..."
              value={edu.specialty}
              onChange={(e) => handleInputChange(index, e)}
            />
            <div className="years-row">
              <input
                className="education-input"
                type="text"
                name="startYear"
                placeholder="–†—ñ–∫ –ø–æ—á–∞—Ç–∫—É"
                value={edu.startYear}
                onChange={(e) => handleInputChange(index, e)}
              />
              <input
                className="education-input"
                type="text"
                name="endYear"
                placeholder="–†—ñ–∫ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è"
                value={edu.endYear}
                onChange={(e) => handleInputChange(index, e)}
              />
            </div>
            <label className="custom-file-upload">
              <input
                type="file"
                name="diploma_image"
                accept="image/*"
                onChange={(e) => handleInputChange(index, e)}
              />
              <img src={cameraIcon} alt="–Ü–∫–æ–Ω–∫–∞ –∫–∞–º–µ—Ä–∏" className="camera-icon" />–î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –¥–∏–ø–ª–æ–º—É
            </label>
            {edu.diploma_image && (
              <p className="file-added-text">
                üìé –§–∞–π–ª –¥–æ–¥–∞–Ω–æ: <strong>{typeof edu.diploma_image === "string" ? edu.diploma_image : edu.diploma_image.name}</strong>
              </p>
            )}
          </div>
        ))}
        {educations.length < MAX_EDUCATIONS && (
                    <button 
                      type="button"
                      className="option-pill add-education-btn"
                      onClick={addEducation}
                    >
                      –î–æ–¥–∞—Ç–∏ –æ—Å–≤—ñ—Ç—É
                    </button>
                  )}
                  <p className="option-description">
                    –ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø—Ä–æ –∫—É—Ä—Å–∏ <br /> –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó üòâ
                  </p>
                </div>
     </div>

      <div className="step-next-button">
        <button className="next-btn" onClick={handleNextClick}>
          –î–ê–õ–Ü
        </button>
      </div>
    </div>
  );
};

export default Step6;
