import React, { useState } from "react";
import ProgressBar from "./ProgressBar";

const nannyOptions = [
  { label: "üë∂ –ù—è–Ω—è –¥–ª—è –Ω–µ–º–æ–≤–ª—è—Ç–∏ (0-1 —Ä—ñ–∫)", value: "–ù—è–Ω—è –¥–ª—è –Ω–µ–º–æ–≤–ª—è—Ç–∏" },
  { label: "üè° –ù—è–Ω—è –¥–ª—è –¥–æ—à–∫—ñ–ª—å–Ω—è—Ç (–¥–ª—è –¥—ñ—Ç–µ–π 1-6 —Ä–æ–∫—ñ–≤)", value: "–ù—è–Ω—è –¥–ª—è –¥–æ–®–∫—ñ–ª—å–Ω—è—Ç" },
  { label: "üè´ –ù—è–Ω—è –¥–ª—è —à–∫–æ–ª—è—Ä—ñ–≤ (–¥–æ–ø–æ–º–æ–≥–∞ –∑ –Ω–∞–≤—á–∞–Ω–Ω—è–º, —Å—É–ø—Ä–æ–≤—ñ–¥)", value: "–ù—è–Ω—è –¥–ª—è —à–∫–æ–ª—è—Ä—ñ–≤" },
  { label: "üéì –ì—É–≤–µ—Ä–Ω–∞–Ω—Ç–∫–∞ (–Ω—è–Ω—è –∑ –ø–µ–¥–∞–≥–æ–≥—ñ—á–Ω–∏–º –ø—ñ–¥—Ö–æ–¥–æ–º)", value: "–ù—è–Ω—è-–ì—É–≤–µ—Ä–Ω–∞–Ω—Ç–∫–∞" },
  { label: "‚è≥ –ù—è–Ω—è –ø–æ–≥–æ–¥–∏–Ω–Ω–æ", value: "–ù—è–Ω—è –ø–æ–≥–æ–¥–∏–Ω–Ω–æ" },
  { label: "üåô –ù—ñ—á–Ω–∞ –Ω—è–Ω—è", value: "–ù—ñ—á–Ω–∞ –Ω—è–Ω—è" },
  { label: "üè† –ù—è–Ω—è –∑ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è–º", value: "–ù—è–Ω—è –∑ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è–º" },
  { label: "üèï –ù—è–Ω—è —Å—É–ø—Ä–æ–≤—ñ–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω", value: "–ù—è–Ω—è –°—É–ø—Ä–æ–≤—ñ–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω" },
  { label: "ü§ù –ù—è–Ω—è –¥–ª—è –¥–∏—Ç–∏–Ω–∏ –∑ –æ—Å–æ–±–ª–∏–≤–∏–º–∏ –ø–æ—Ç—Ä–µ–±–∞–º–∏", value: "–ù—è–Ω—è –¥–ª—è –¥–∏—Ç–∏–Ω–∏ –∑ –æ—Å–æ–±–ª–∏–≤–∏–º–∏ –ø–æ—Ç—Ä–µ–±–∞–º–∏" },
  { label: "üç≤ –ù—è–Ω—è-–¥–æ–º–æ–≥–æ—Å–ø–æ–¥–∞—Ä–∫–∞", value: "–ù—è–Ω—è-–¥–æ–º–æ–≥–æ—Å–ø–æ–¥–∞—Ä–∫–∞" },
  { label: "üìÖ –ù—è–Ω—è –ø–æ—Å—Ç—ñ–π–Ω–æ—ó –æ—Å–Ω–æ–≤–∏", value: "–ù—è–Ω—è –ø–æ—Å—Ç—ñ–π–Ω–æ—ó –æ—Å–Ω–æ–≤–∏" },
];


const SurveyStep3 = ({ onNext, onBack, onSelect, currentStep, totalSteps }) => {
  const [selectedOptions, setSelectedOptions] = useState([]);

  const handleCheckboxChange = (option) => {
    setSelectedOptions((prev) =>
      prev.includes(option)
        ? prev.filter((item) => item !== option)
        : [...prev, option]
    );
  };

  const handleNextClick = () => {
    if (selectedOptions.length === 0) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≤–∞—Ä—ñ–∞–Ω—Ç.");
      return;
    }

    onSelect && onSelect(selectedOptions); 
    onNext();
  };

  return (
    <div>
      <button onClick={onBack} className="back-button-dark">
        <span className="back-text">–ù–ê–ó–ê–î</span>
        <span className="back-arrow-dark"></span>
      </button>

      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />

      <p className="question-dark-survey">–Ø–∫–∏–π —Ç–∏–ø –Ω—è–Ω—ñ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω?</p>
      <p className="text-dark">–ú–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤</p>

      <div className="checkbox-group">
        {nannyOptions.map((option, index) => (
          <label key={index} className="checkbox-option">
            <span>{option.label}</span>
            <input
              type="checkbox"
              value={option.value}
              checked={selectedOptions.includes(option.value)}
              onChange={() => handleCheckboxChange(option.value)}
            />          
          </label>
        ))}
      </div>

      <div className="step-next-button">
        <button className="next-btn" onClick={handleNextClick}>
          –î–ê–õ–Ü
        </button>
      </div>
    </div>
  );
};

export default SurveyStep3;
