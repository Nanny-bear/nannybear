import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "../axiosConfig";
import "../styles/nannylistpage.css"

const NannyListPage = () => { 
  const navigate = useNavigate();

  const baseUrl = process.env.REACT_APP_API_URL || "http://localhost:8000";

  const [preferences, setPreferences] = useState(null);
  const [nannies, setNannies] = useState([]);

  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 15;

  const indexOfLast = currentPage * itemsPerPage;
  const indexOfFirst = indexOfLast - itemsPerPage;
  const currentNannies = nannies.slice(indexOfFirst, indexOfLast);

  const totalPages = Math.ceil(nannies.length / itemsPerPage);

  const [favorites, setFavorites] = useState(() => {
    const saved = localStorage.getItem("favoriteNannies");
    return saved ? JSON.parse(saved) : [];
  });
  
  const toggleFavorite = (id) => {
    setFavorites((prev) => {
      const updated = prev.includes(id) ? prev.filter(f => f !== id) : [...prev, id];
      localStorage.setItem("favoriteNannies", JSON.stringify(updated));
      return updated;
    });
  };  

  // useEffect(() => {
  //   axios.get("/api/nanny-profiles", { withCredentials: true })
  //     .then((res) => setNannies(res.data))
  //     .catch((err) => console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –Ω—è–Ω—å:", err));
  // }, []);

  // useEffect(() => {
  //   const fetchPreferences = async () => {
  //     try {
  //       const res = await axios.get("/api/nanny-preferences", {
  //         withCredentials: true,
  //       });     
  
  //       // –û—Ç—Ä–∏–º–∞—î–º–æ –ª–∏—à–µ –æ–±'—î–∫—Ç —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
  //       setPreferences(res.data.preferences || {});
  //     } catch (err) {
  //       console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó:", err);
  //     }
  //   };
  
  //   fetchPreferences();
  // }, []);

    useEffect(() => {
      const fetchPreferences = async () => {
        try {
          const res = await axios.get("/api/nanny-preferences", {
            withCredentials: true,
          });
          const filters = res.data.preferences;
          console.log("üü° –û—Ç—Ä–∏–º–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞:", res.data);

          if (filters && Object.keys(filters).length > 0) {
            const mapped = {
              gender: filters.gender,
              experience_years: filters.experience_years,
              hourly_rate: filters.hourly_rate,
              languages: filters.languages?.split(",").map((l) => l.trim()),
              education: filters.education?.split(",").map((e) => e.trim()),
              work_schedule: filters.work_schedule?.split(",").map((w) => w.trim()),
              specialization: filters.specialization?.split(",").map((s) => s.trim()),
              additional_skills: filters.additional_skills?.split(",").map((a) => a.trim()),
            };            

          console.log("üîé –ü–µ—Ä–µ–¥–∞–Ω–æ —É —Ñ—ñ–ª—å—Ç—Ä:", mapped);
          setPreferences(mapped);
        } else {
          const all = await axios.get("/api/nanny-profiles");
          setNannies(all.data);
        }
        } catch (err) {
          console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó:", err);
        }
      };
    
      fetchPreferences();
    }, []); 
  

  useEffect(() => {
    const fetchNannies = async () => {
      if (!preferences) return; // —á–µ–∫–∞—î–º–æ, –ø–æ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∞—Ç—å—Å—è
  
      try {
        console.log("üéØ –ù–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é:", preferences);
        const res = await axios.post("/api/nanny-profiles/filter", preferences, {
          withCredentials: true,
        });
        setNannies(res.data); // –æ—Ç—Ä–∏–º–∞—î–º–æ —Å–ø–∏—Å–æ–∫, —â–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å
      } catch (err) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –Ω—è–Ω—å:", err);
      }
    };
  
    fetchNannies();
  }, [preferences]);
  
  useEffect(() => {
    if (preferences) {
      console.log("üéØ –ó–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏:", preferences);
    }
  }, [preferences]);  

  const handleGoToSurvey = () => {
    navigate("/registration/parent/survey?from=nanny-list");
  };

  return (
    <div className="profile-list-container">
      <h1 className="title-dark">–£—Å—ñ –Ω—è–Ω—ñ</h1>

      {preferences && (
      <button
        className="clear-filter-button"
        onClick={async () => {
          setPreferences(null);
          try {
            const res = await axios.get("/api/nanny-profiles");
            setNannies(res.data);
          } catch (err) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—Å—ñ—Ö –Ω—è–Ω—å", err);
          }
        }}
      >
        –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –Ω—è–Ω—å
      </button>
    )}

      <div className="pagination">
        {Array.from({ length: totalPages }, (_, i) => (
          <button
            key={i + 1}
            className={currentPage === i + 1 ? "active-page" : ""}
            onClick={() => setCurrentPage(i + 1)}
          >
            {i + 1}
          </button>
        ))}
      </div>

      <button onClick={handleGoToSurvey} className="go-to-survey-button">
        –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä
      </button>
      <h2>{nannies.length} –Ω—è–Ω—å –∑–Ω–∞–π–¥–µ–Ω–æ</h2>

      {preferences && (
        <div className="active-filters">
          <h3>–ó–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏:</h3>
          <ul>
            {Object.entries(preferences).map(([key, value]) => {
              if (!value || (Array.isArray(value) && value.length === 0)) return null;
              const displayValue = Array.isArray(value) ? value.join(", ") : value;
              return <li key={key}><strong>{key}:</strong> {displayValue}</li>;
            })}
          </ul>
        </div>
      )}

      <div className="nanny-cards-container">
        {currentNannies.map((nanny) => (
          <div key={nanny.id} className="nanny-card">
            {nanny.photo && (
              <img
                src={`${baseUrl}/storage/${nanny.photo}`}
                alt={`${nanny.first_name} ${nanny.last_name}`}
                className="nanny-photo"
              />
            )}
            <h2>{nanny.first_name} {nanny.last_name}</h2>
            <button className="favorite-btn" onClick={() => toggleFavorite(nanny.id)}>
              {favorites.includes(nanny.id) ? "‚ù§Ô∏è" : "ü§ç"}
            </button>

            <p><strong>–ú—ñ—Å—Ç–æ:</strong> {nanny.city}, {nanny.district}</p>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {nanny.phone}</p>
            <p><strong>–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:</strong> {
              new Date(nanny.birth_date).toLocaleDateString("uk-UA")
            }</p>
            <p><strong>–°—Ç–∞—Ç—å:</strong> {nanny.gender}</p>

            <p><strong>–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è:</strong> {nanny.specialization?.join(", ")}</p>
            <p><strong>–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:</strong> {nanny.work_schedule?.join(", ")}</p>
            <p><strong>–û—Å–≤—ñ—Ç–∞:</strong></p>
              {Array.isArray(nanny.education)
                ? nanny.education.map((edu, idx) => (
                    <div key={idx}>
                      {edu.institution} ({edu.specialty}, {edu.years})
                    </div>
                  ))
                : <p>‚Äî</p>}
            <p><strong>–ú–æ–≤–∏:</strong> {nanny.languages?.join(", ")}</p>
            <p><strong>–î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–≤–∏—á–∫–∏:</strong> {nanny.additional_skills?.join(", ")}</p>
            <p><strong>–°—Ç–∞–∂:</strong> {nanny.experience_years} —Ä–æ–∫—ñ–≤</p>
            <p><strong>–¶—ñ–Ω–∞ –∑–∞ –≥–æ–¥–∏–Ω—É:</strong> {nanny.hourly_rate} –≥—Ä–Ω</p>
            <p><strong>–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å:</strong> {nanny.availability?.join(", ")}</p>
          </div>
        ))}
      </div>
      <div className="pagination">
        {Array.from({ length: totalPages }, (_, i) => (
          <button
            key={i + 1}
            className={currentPage === i + 1 ? "active-page" : ""}
            onClick={() => setCurrentPage(i + 1)}
          >
            {i + 1}
          </button>
        ))}
      </div>
    </div>
  );
};

export default NannyListPage;
